# $Id: DARWIN_UNIVERSAL_DEF,v 1.4 2010-02-17 12:24:48 edgrif Exp $ #

#################################################################
############### acedb: R.Durbin and J.Thierry-Mieg ##############
############### ported to Linux by Ken Letovski    ##############
############### wmake/LINUX_DEF    Feb-2-1993      ##############
#################################################################

#################################################################
########## Machine dependant compiler modification ##############
###########    for generic intel-based LINUX   ##################
#################################################################
########### This file is included by wmake/truemake #############
######  Edit this file to adapt the ACeDB to a new machine ######
#####   following the explanations given in wmake/truemake  #####
#################################################################


#
# Note this make is not reentrant, you need to blow everything away
# in bin.DARWIN_UNIVERSAL and then rebuild. It's on the to-do list to
# make it kinder. (but one could say, given acedb's lack of proper
# dependencies, you should be remaking everything anyway !)
#
# This make assumes gtk and dependencies are in /usr/local/gtk
# AND that all these libraries have been built as universal libs.
#


NAME = DARWIN

# Set up pkg-config/gtk etc compile stuff...
PKGPATH = -local /usr/local/gtk


# Compiler used to build 3rd party libraries 
LIBCC = cc

ARCH_FLAGS = -arch ppc -arch i386

COPT = -g -isysroot /Developer/SDKs/MacOSX10.4u.sdk $(ARCH_FLAGS)
LOPT = -g

GLIB_VER = glib-2.0
GLIB_LIBS = `../w3rdparty/libs-config -local /usr/local/gtk  $(GLIB_VER)` -lm -lreadline ./libgd.a -L/usr/X11R6/lib -lX11

GTKVER = gtk+-2.0
LIBS = `../w3rdparty/libs-config -local /usr/local/gtk  $(GTKVER)` -lm -lreadline ./libgd.a -L/usr/X11R6/lib -lX11

COMPILER = cc $(COPT) -fwritable-strings -Wall -DACEDB4 `../w3rdparty/include-config -local /usr/local/gtk $(GTKVER)`

LINKER = cc $(LOPT) -bind_at_load $(ARCH_FLAGS)


### Linux uses flex to emulate the standard 'lex' program
LEX_LIBS = -ll
### flex -l emulates AT&T lex as accurately as possible
LEX = flex
LEX_OPTIONS = -l

### linux may use bison with flag -y if yacc doesn't exist
YACC = yacc
YACC_OPTIONS =

RPCGEN_FLAGS = -b -I -K -1

AR_COMMAND = /usr/bin/libtool
AR_OPTIONS = -static -o
RANLIB_NEEDED = false


#################################################################
#################################################################
 
 
 
 
